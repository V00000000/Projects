# I student_name Vaskar Ghimirey, student_number 000937198, certify that this work is my own effort and that I have not allowed anyone else to copy from it.

def question1a(ph):
    if ph < 4 or ph > 10:
        return "VERY " + classify_ph(ph)
    else:
        return classify_ph(ph)

def classify_ph(ph):
    if ph == 7:
        return "neutral"
    elif ph > 7:
        return "alkali"
    else:
        return "acidic"

# Example usage in the main area
if __name__ == "__main__":
    print("Running solution to question 1a ...")
    print("Assuming valid numeric input")
    ph = float(input("What is the pH that you want to know about? "))
    answer1a = question1a(ph)
    print("The answer is:", answer1a)


def question1b(min_temp, max_temp):  
    water_present = check_water(min_temp, max_temp)
    crops_growable = check_crops(min_temp)
    habitable = water_present and crops_growable

    result = f"Water: {yes_or_no(water_present)}, Crops: {yes_or_no(crops_growable)}, Habitable: {yes_or_no(habitable)}"
    return result

def check_water(min_temp, max_temp):
    return min_temp > 0 and max_temp < 100

def check_crops(min_temp):
    return 21 < min_temp < 32

def yes_or_no(condition):
    return "Yes" if condition else "No"

# Example usage in the main area
if __name__ == "__main__":
    print("\nRunning solution for habitable planet criteria...")
    print("Assuming valid numeric input")

    min_temp = float(input("Enter the minimum temperature in degrees Celsius: "))
    max_temp = float(input("Enter the maximum temperature in degrees Celsius: "))

    result1b = question1b(min_temp, max_temp)
    print(result1b)


def question1c(a, b, c):  
    if is_valid_triangle(a, b, c):
        if a == b == c:
            return "Valid equilateral triangle"
        elif a == b or b == c or a == c:
            return "Valid isosceles triangle"
        else:
            return "Valid scalene triangle"
    else:
        return "Not a valid triangle"

def is_valid_triangle(a, b, c):
    return a + b > c and a + c > b and b + c > a

# Example usage in the main area
if __name__ == "__main__":
    print("\nRunning solution for triangle classification...")
    print("Assuming valid integer input")

    a = int(input("Enter the length of side a: "))
    b = int(input("Enter the length of side b: "))
    c = int(input("Enter the length of side c: "))

    result1c = question1c(a, b, c)
    print(result1c)


def question2(value1, value2):  
    # Your function logic goes here
    result = value1 + value2
    print("Function result:", result)

while True:
    try:
        # Get user input
        value1 = float(input("Enter the first value: "))
        value2 = float(input("Enter the second value: "))

        # Check assumptions
        if value1 < 0 or value2 < 0:
            print("Error: Values must be non-negative. Please enter valid values.")
            continue  # Restart the loop

        # Call the function if assumptions are met
        question2(value1, value2)

        # Check if the user wants to quit
        exit_input = input("Type 'quit' to exit, or press Enter to continue: ")
        if exit_input.lower() == 'quit':
            print("Exiting the loop.")
            break  # Exit the loop

    except ValueError:
        print("Error: Please enter valid numeric values.")


while True:
    user_input = input("Enter values separated by space (type 'quit' to exit): ")

    # Check if the user wants to quit
    if user_input.lower() == 'quit':
        print("Exiting the loop.")
        break

    # Split the input into values
    values = user_input.split()

    try:
        # Convert values to floats
        value1 = float(values[0])
        value2 = float(values[1])

        # Check if values are negative
        if value1 < 0 or value2 < 0:
            print("Error: Values must be greater than 0. Please enter valid values.")
            continue  # Restart the loop

        # Call the function if assumptions are met
        question2(value1, value2)

    except (ValueError, IndexError):
        print("Error: Please enter valid numeric values separated by space.")
